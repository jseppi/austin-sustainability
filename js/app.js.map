{"version":3,"sources":["app/app.js","app/scripts/constants.js","app/scripts/controllers/AppCtrl.js","app/scripts/controllers/HomeCtrl.js","app/scripts/controllers/SectionCtrl.js","app/scripts/directives/starHomeSlider.js","app/scripts/directives/starMarkdown.js","app/scripts/services/HomeService.js","app/scripts/services/SectionService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"_public/js/app.js","sourcesContent":["'use strict';\n\n/* jshint -W079: false */\nvar App = angular.module('app', [\n  'ngAnimate', 'ngSanitize', 'ngTouch', 'ui.router'\n]);\n\n\nApp.config(function ($stateProvider, $urlRouterProvider, SECTIONS) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'partials/home.html',\n      controller: 'HomeCtrl',\n      resolve: {\n        home: function (HomeService) {\n          return HomeService.getContent();\n        },\n        sections: function (SectionService) {\n          return SectionService.getSections();\n        }\n      }\n    });\n\n\n    //Create state for each main section based on slugs\n    _.each(SECTIONS, function (section) {\n      $stateProvider.state(section, {\n        url: '/' + section,\n        templateUrl: 'partials/section.html',\n        controller: 'SectionCtrl',\n        resolve: {\n          sections: function (SectionService) {\n            return SectionService.getSections();\n          }\n        }\n      });\n      return;\n    });\n    \n    $urlRouterProvider.otherwise('/');\n    return;\n});\n\nApp.run(function (SectionService, HomeService) {\n  SectionService.getSections();\n  HomeService.getContent();\n});\n","App\n  .constant('CONTENT_PATH', 'content/')\n  .constant('SECTIONS', [\n    'climate_and_energy',\n    'natural_systems',\n    'equity_and_empowerment',\n    'health_and_safety',\n    'arts_education_and_culture',\n    'economy_and_jobs',\n    'built_environment',\n  ])\n  .constant('HOME_STAR', 'content/stars/home/identity_05_main-menu-08.png')\n  ;","'use strict';\n\nApp\n  .controller('AppCtrl', function ($scope, $state) {\n    $scope.sectionClass = '';\n\n    $scope.$on('$stateChangeSuccess', function() {\n      $scope.sectionClass = $state.current.name;\n    });\n\n  });\n\n","'use strict';\n\nApp.controller('HomeCtrl',\n  function ($scope, $state, home, sections, HOME_STAR) {\n\n    $scope.homeContent = home;\n    $scope.sections = sections;\n    $scope.expandedSection = null;\n    $scope.starPath = HOME_STAR;\n\n    \n    $scope.expandSection = function (section) {\n      if ($scope.expandedSection === section) {\n        $scope.expandedSection = null;\n        $scope.starPath = HOME_STAR;\n      }\n      else {\n        $scope.expandedSection = section;\n        $scope.starPath = section.config.star;\n      }\n    };\n\n  }\n);\n","'use strict';\n\nApp.controller('SectionCtrl', function ($scope, $state, sections) {\n  \n  var currentSection = _.find(sections, function (s) {\n    return s.key === $state.current.name; }\n  );\n\n  $scope.section = currentSection.config;\n  $scope.subsections = currentSection.config.subsections;\n\n  //default to selecting the first subsection \n  $scope.selectedSubsection = _.first($scope.subsections);\n\n\n  $scope.selectSubsection = function (ss) {\n    $scope.selectedSubsection = ss;\n  };\n\n});\n","'use strict';\nApp.\n  directive('starHomeSlider', function () {\n    return {\n      restrict: 'A',\n      scope: {\n        slides: '=starHomeSlider'\n      },\n      template: \"\" + \n        \"<div class='home-slider'>\" +\n          \"<ul class='slide-controls'>\" + \n            \"<li ng-repeat='slide in slides' ng-class='{active: slide.isActive}'>\" +\n              \"<button type='button' ng-click='makeActive(slide)'>{{$index + 1}}</button>\" +\n            \"</li>\" +\n          \"</ul>\" +\n          \"<div ng-repeat='slide in slides' ng-show='slide.isActive'>\" +\n            \"<p star-markdown='slide.content'></p>\" +\n            \"<img ng-src='{{slide.image}}'/>\" +\n          \"</div>\" +\n        \"</div>\",\n      link: function (scope) {\n        var firstSlide = _.first(scope.slides);\n        firstSlide.isActive = true;\n\n        scope.makeActive = function (slide) {\n          var currActive = _.findWhere(scope.slides, {'isActive': true});\n          currActive.isActive = false;\n          slide.isActive = true;\n        };\n      }\n    };\n  });","'use strict';\n// Based on btford/angular-markdown-directive\n// https://github.com/btford/angular-markdown-directive\n\n// Requires marked and ngSanitize \n\n// Specify markdown content as\n//   as scope variable: <div star-markdown=\"someScopeVar\"></div>\n//   as file: <div star-markdown ng-include=\"'myfile.md'\"></div>\n//   as html node content <div star-markdown># Title</div> \nApp.\n  directive('starMarkdown', function ($sanitize) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attrs) {\n        if (attrs.starMarkdown) {\n          scope.$watch(attrs.starMarkdown, function (newVal) {\n            var html = newVal ? $sanitize(marked(newVal)) : '';\n            element.html(html);\n          });\n        } else {\n          var html = $sanitize(marked(element.text()));\n          element.html(html);\n        }\n      }\n    };\n  });","'use strict';\n\nApp.factory('HomeService', function ($http, $q, CONTENT_PATH) {\n\n  var service = {};\n\n  service.getContent = function () {\n\n    var path = CONTENT_PATH + 'home.yml';\n    return $http.get(path, {cache: true})\n      .then(function (response) {\n        var homeConfig = response.data;\n        return jsyaml.load(homeConfig)\n      });\n  };\n\n  return service;\n});","'use strict';\n\nApp.factory('SectionService', function ($http, $q, CONTENT_PATH, SECTIONS) {\n\n  var service = {};\n\n  service.getSections = function () {\n    var promises = _.map(SECTIONS, function (section) {\n      var path = CONTENT_PATH + section + \".yml\";\n      return $http.get(path, {cache: true})\n        .then(function (response) {\n          var sectionConfig = response.data;\n          return {\n            key: section,\n            config: jsyaml.load(sectionConfig)\n          };\n        });\n    });\n\n    return $q.all(promises);\n  };\n\n  return service;\n});"]}