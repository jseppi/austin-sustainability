{"version":3,"sources":["app/app.js","app/scripts/constants.js","app/scripts/controllers/AppCtrl.js","app/scripts/controllers/HomeCtrl.js","app/scripts/controllers/SectionCtrl.js","app/scripts/directives/starHomeSlider.js","app/scripts/directives/starMarkdown.js","app/scripts/directives/starVisualization.js","app/scripts/filters/slugifyFilter.js","app/scripts/services/HomeService.js","app/scripts/services/SectionService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"_public\\js\\app.js","sourcesContent":["'use strict';\r\n\r\n/* jshint -W079: false */\r\nvar App = angular.module('app', [\r\n  'ngAnimate', 'ngSanitize', 'ngTouch', 'ui.router'\r\n]);\r\n\r\n\r\nApp.config(function ($stateProvider, $urlRouterProvider, SECTIONS) {\r\n  $stateProvider\r\n    .state('home', {\r\n      url: '/',\r\n      templateUrl: 'partials/home.html',\r\n      controller: 'HomeCtrl',\r\n      resolve: {\r\n        home: function (HomeService) {\r\n          return HomeService.getContent();\r\n        },\r\n        sections: function (SectionService) {\r\n          return SectionService.getSections();\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n    //Create state for each main section based on slugs\r\n    //TODO: subsection routes using slugify() on subsection titles\r\n    _.each(SECTIONS, function (section) {\r\n      $stateProvider.state(section, {\r\n        url: '/' + section + '/:subsection/',\r\n        templateUrl: 'partials/section.html',\r\n        controller: 'SectionCtrl',\r\n        resolve: {\r\n          sections: function (SectionService) {\r\n            return SectionService.getSections();\r\n          }\r\n        }\r\n      });\r\n      return;\r\n    });\r\n    \r\n    $urlRouterProvider.otherwise('/');\r\n    return;\r\n});\r\n\r\nApp.run(function ($rootScope, SectionService, HomeService) {\r\n  //prefetch content\r\n  SectionService.getSections();\r\n  HomeService.getContent();\r\n\r\n  //set var to indicate if in node-webkit version\r\n  $rootScope.isNodeWebkit = (typeof process === \"object\") && process.versions['node-webkit'];\r\n  \r\n  //set zoomLevel if in node-webkit to account for scaling bug in \r\n  // Windows 8 webkit on high DPI screens \r\n  if ($rootScope.isNodeWebkit) {\r\n    var gui = require('nw.gui');\r\n    var win = gui.Window.get();\r\n    win.zoomLevel = 2;\r\n  }\r\n    \r\n});\r\n","App\r\n  .constant('CONTENT_PATH', 'content/')\r\n  .constant('SECTIONS', [\r\n    'climate_and_energy',\r\n    'natural_systems',\r\n    'equity_and_empowerment',\r\n    'health_and_safety',\r\n    'arts_education_and_culture',\r\n    'economy_and_jobs',\r\n    'built_environment',\r\n  ])\r\n  .constant('HOME_STAR', 'content/stars/home/identity_05_main-menu-08.png')\r\n  ;","'use strict';\r\n\r\nApp\r\n  .controller('AppCtrl', function ($scope, $state) {\r\n    $scope.sectionClass = 'home';\r\n\r\n    $scope.closeKiosk = function () {\r\n      if (!$scope.isNodeWebkit) { \r\n        return; \r\n      }\r\n      var gui = require('nw.gui');\r\n      gui.App.quit();\r\n    };\r\n\r\n    $scope.$on('$stateChangeSuccess', function () {\r\n      $scope.sectionClass = $state.current.name;\r\n    });\r\n  });\r\n","'use strict';\r\n\r\nApp.controller('HomeCtrl',\r\n  function ($scope, $rootScope, $state, home, sections, HOME_STAR) {\r\n\r\n    $rootScope.pageTitle = \"Home\";\r\n\r\n    $scope.homeContent = home;\r\n    $scope.sections = sections;\r\n    $scope.expandedSection = null;\r\n    $scope.starPath = HOME_STAR;\r\n    \r\n    $scope.expandSection = function (section) {\r\n      if ($scope.expandedSection === section) {\r\n        $scope.expandedSection = null;\r\n        $scope.starPath = HOME_STAR;\r\n      }\r\n      else {\r\n        $scope.expandedSection = section;\r\n        $scope.starPath = section.config.star;\r\n      }\r\n    };\r\n\r\n  }\r\n);\r\n","'use strict';\r\n\r\nApp.controller('SectionCtrl', function ($scope, $rootScope, $state, $filter, $stateParams, sections) {\r\n\r\n  function goToDefaultSubsection () {\r\n    $scope.selectedSubsection = _.first($scope.subsections);\r\n    $state.go($state.current.name, {subsection: slugify($scope.selectedSubsection.title)});\r\n  }\r\n\r\n  var slugify = $filter('slugify');\r\n  \r\n  var currentSection = _.find(sections, function (s) {\r\n    return s.key === $state.current.name; }\r\n  );\r\n\r\n  $scope.sectionName = $state.current.name;\r\n  $scope.section = currentSection.config;\r\n  $scope.subsections = currentSection.config.subsections;\r\n\r\n  //get the subsection from the stateParams\r\n  var subsectionParam = $stateParams.subsection;\r\n\r\n  if (!subsectionParam || !_.isString(subsectionParam)) {\r\n    //default to selecting the first subsection \r\n    goToDefaultSubsection();\r\n  }\r\n  else {\r\n    //try to find the matching subsection\r\n    $scope.selectedSubsection = _.find($scope.subsections, function (ss) {\r\n      return subsectionParam.toLowerCase() === slugify(ss.title);\r\n    });\r\n\r\n    //if not found, just default to first subsection\r\n    if (!$scope.selectedSubsection) {\r\n      goToDefaultSubsection();\r\n    }\r\n  }\r\n\r\n  $rootScope.pageTitle = $scope.section.title + \" - \" + $scope.selectedSubsection.title;\r\n\r\n});\r\n","'use strict';\r\nApp.\r\n  directive('starHomeSlider', function () {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        slides: '=starHomeSlider'\r\n      },\r\n      template: \"\" + \r\n        \"<div class='home-slider swipable'>\" +\r\n          \"<ul class='swipe-controls'>\" + \r\n            \"<li ng-repeat='slide in slides' ng-class='{active: slide.isActive}'>\" +\r\n              \"<button type='button' title='Click or swipe to see content' ng-click='makeActive(slide)'>{{$index + 1}}</button>\" +\r\n            \"</li>\" +\r\n          \"</ul>\" +\r\n          \"<div ng-repeat='slide in slides' star-home-slider-content='slide'></div>\" +\r\n        \"</div>\",\r\n      controller: function ($scope) {\r\n\r\n        var numSlides = $scope.slides.length;\r\n\r\n        this.nextSlide = function (currSlide) {\r\n          var currIndex = _.indexOf($scope.slides, currSlide);\r\n          var nextIndex = (currIndex + 1) % numSlides;\r\n          $scope.slides[currIndex].isActive = false;\r\n          $scope.slides[nextIndex].isActive = true;\r\n        };\r\n\r\n        this.prevSlide = function (currSlide) {\r\n          var currIndex = _.indexOf($scope.slides, currSlide);\r\n          var prevIndex = (currIndex - 1 < 0) ? numSlides - 1 : currIndex - 1;\r\n          $scope.slides[currIndex].isActive = false;\r\n          $scope.slides[prevIndex].isActive = true;\r\n        };\r\n      },\r\n      link: function (scope) {\r\n        var firstSlide = _.first(scope.slides);\r\n        firstSlide.isActive = true;\r\n\r\n        scope.makeActive = function (slide) {\r\n          var currActive = _.findWhere(scope.slides, {'isActive': true});\r\n          currActive.isActive = false;\r\n          slide.isActive = true;\r\n        };\r\n      }\r\n    };\r\n  })\r\n  .directive('starHomeSliderContent', function () {\r\n    return {\r\n      restrict: 'A',\r\n      replace: true,\r\n      require: '^starHomeSlider',\r\n      scope: {\r\n        slide: '=starHomeSliderContent'\r\n      },\r\n      template: \"\" +\r\n        \"<div ng-swipe-right='swipeRight(slide)' ng-swipe-left='swipeLeft(slide)' class='slide-content' ng-show='slide.isActive'>\" +\r\n          \"<div star-markdown='slide.content'></div>\" +\r\n          \"<img ng-src='{{slide.image}}' alt='Image for slide'/>\" +\r\n        \"</div>\",\r\n      link: function (scope, element, attrs, ctrl) {\r\n        scope.swipeRight = function (slide) {\r\n          ctrl.prevSlide(slide);\r\n        };\r\n\r\n        scope.swipeLeft = function (slide) {\r\n          ctrl.nextSlide(slide);\r\n        };\r\n      }\r\n    };\r\n  });","'use strict';\r\n// Based on btford/angular-markdown-directive\r\n// https://github.com/btford/angular-markdown-directive\r\n\r\n// Requires marked and ngSanitize \r\n\r\n// Specify markdown content as\r\n//   as scope variable: <div star-markdown=\"someScopeVar\"></div>\r\n//   as file: <div star-markdown ng-include=\"'myfile.md'\"></div>\r\n//   as html node content <div star-markdown># Title</div> \r\nApp.\r\n  directive('starMarkdown', function ($sanitize) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attrs) {\r\n        if (attrs.starMarkdown) {\r\n          scope.$watch(attrs.starMarkdown, function (newVal) {\r\n            var html = newVal ? $sanitize(marked(newVal)) : '';\r\n            element.html(html);\r\n          });\r\n        } else {\r\n          var html = $sanitize(marked(element.text()));\r\n          element.html(html);\r\n        }\r\n      }\r\n    };\r\n  });","'use strict';\r\nApp.\r\n  directive('starVisualization', function () {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        visualizations: '=starVisualization'\r\n      },\r\n      template: \"\" + \r\n        \"<div class='visualization-slider swipable'>\" +\r\n          \"<ul ng-if='visualizations.length > 1' class='swipe-controls'>\" + \r\n            \"<li ng-repeat='vis in visualizations' ng-class='{active: vis.isActive}'>\" +\r\n              \"<button type='button' title='Click or swipe to see content' ng-click='makeActive(vis)'>{{$index + 1}}</button>\" +\r\n            \"</li>\" +\r\n          \"</ul>\" +\r\n          \"<div ng-repeat='vis in visualizations' star-visualization-content='vis'></div>\" +\r\n        \"</div>\",\r\n      controller: function ($scope) {\r\n\r\n        var numVisualizations = $scope.visualizations.length;\r\n\r\n        this.nextVis = function (currVis) {\r\n          var currIndex = _.indexOf($scope.visualizations, currVis);\r\n          var nextIndex = (currIndex + 1) % numVisualizations;\r\n          $scope.visualizations[currIndex].isActive = false;\r\n          $scope.visualizations[nextIndex].isActive = true;\r\n        };\r\n\r\n        this.prevVis = function (currVis) {\r\n          var currIndex = _.indexOf($scope.visualizations, currVis);\r\n          var prevIndex = (currIndex - 1 < 0) ? numVisualizations - 1 : currIndex - 1;\r\n          $scope.visualizations[currIndex].isActive = false;\r\n          $scope.visualizations[prevIndex].isActive = true;\r\n        };\r\n      },\r\n      link: function (scope) {\r\n        var firstVis = _.first(scope.visualizations);\r\n        firstVis.isActive = true;\r\n\r\n        scope.makeActive = function (vis) {\r\n          var currActive = _.findWhere(scope.visualizations, {'isActive': true});\r\n          currActive.isActive = false;\r\n          vis.isActive = true;\r\n        };\r\n      }\r\n    };\r\n  })\r\n  .directive('starVisualizationContent', function () {\r\n    return {\r\n      restrict: 'A',\r\n      replace: true,\r\n      require: '^starVisualization',\r\n      scope: {\r\n        vis: '=starVisualizationContent'\r\n      },\r\n      template: \"\" +\r\n        \"<div ng-swipe-right='swipeRight(vis)' ng-swipe-left='swipeLeft(vis)' class='vis-container' ng-show='vis.isActive'>\" +\r\n          \"<h4 class='vis-title' ng-if='vis.title'>{{vis.title}}</h4>\" +\r\n          \"<div class='vis-description' ng-if='vis.description'>{{vis.description}}</div>\" +\r\n          \"<div class='vis-graphic-container'>\" +\r\n            \"<img ng-src='{{vis.graphic}}' alt='Visualization' />\" +\r\n          \"</div>\" +\r\n        \"</div>\",\r\n      link: function (scope, element, attrs, ctrl) {\r\n        scope.swipeRight = function (vis) {\r\n          ctrl.prevVis(vis);\r\n        };\r\n\r\n        scope.swipeLeft = function (vis) {\r\n          ctrl.nextVis(vis);\r\n        };\r\n      }\r\n    };\r\n  });","'use strict';\r\n\r\nApp.filter('slugify', function() {\r\n\r\n  function slugify(text) {\r\n    return text.toString().toLowerCase()\r\n      .replace(/\\s+/g, '_')           // Replace spaces with _\r\n      .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n      .replace(/\\-\\-+/g, '_')         // Replace multiple _ with single _\r\n      .replace(/^_+/, '')             // Trim _ from start of text\r\n      .replace(/_+$/, '');            // Trim _ from end of text\r\n  }\r\n\r\n  return function(input) {\r\n    return input && _.isString(input) ? slugify(input) : ''; \r\n  };\r\n\r\n});","'use strict';\r\n\r\nApp.factory('HomeService', function ($http, $q, CONTENT_PATH) {\r\n\r\n  var service = {};\r\n\r\n  service.getContent = function () {\r\n\r\n    var path = CONTENT_PATH + 'home.yml';\r\n    return $http.get(path, {cache: true})\r\n      .then(function (response) {\r\n        var homeConfig = response.data;\r\n        return jsyaml.load(homeConfig)\r\n      });\r\n  };\r\n\r\n  return service;\r\n});","'use strict';\r\n\r\nApp.factory('SectionService', function ($http, $q, CONTENT_PATH, SECTIONS) {\r\n\r\n  var service = {};\r\n\r\n  service.getSections = function () {\r\n    var promises = _.map(SECTIONS, function (section) {\r\n      var path = CONTENT_PATH + section + \".yml\";\r\n      return $http.get(path, {cache: true})\r\n        .then(function (response) {\r\n          var sectionConfig = response.data;\r\n          return {\r\n            key: section,\r\n            config: jsyaml.load(sectionConfig)\r\n          };\r\n        });\r\n    });\r\n\r\n    return $q.all(promises);\r\n  };\r\n\r\n  return service;\r\n});"]}