{"version":3,"sources":["app/app.js","app/scripts/SectionService.js","app/scripts/constants.js","app/scripts/controllers/AppCtrl.js","app/scripts/controllers/HomeCtrl.js","app/scripts/controllers/SectionCtrl.js","app/scripts/directives/starMainNav.js","app/scripts/directives/starMarkdown.js","app/scripts/directives/starSeptagram.js","app/scripts/services.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA","file":"_public/js/app.js","sourcesContent":["'use strict';\n\n/* jshint -W079: false */\nvar App = angular.module('app', [\n  'ngAnimate', 'ngSanitize', 'ngTouch', 'ui.router'\n]);\n\n\nApp.config(function ($stateProvider, $urlRouterProvider, SECTIONS) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'partials/home.html',\n      controller: 'HomeCtrl',\n      resolve: {\n        sections: function (SectionService) {\n          return SectionService.load();\n        }\n      }\n    });\n\n\n    //Create state for each main section based on slugs\n    _.each(SECTIONS, function (section) {\n      $stateProvider.state(section, {\n        url: '/' + section,\n        templateUrl: 'partials/section.html',\n        controller: 'SectionCtrl',\n        resolve: {\n          sections: function (SectionService) {\n            return SectionService.load();\n          }\n        }\n      });\n      return;\n    });\n    \n    $urlRouterProvider.otherwise('/');\n    return;\n});\n","'use strict';\n\nApp.factory('SectionService', function ($http, $q, CONTENT_PATH, SECTIONS) {\n\n  var service = {};\n  var _isLoaded = false;\n  var _data = [];\n\n  service.load = function () {\n    var deferred = $q.defer();\n    if (_isLoaded) {\n      deferred.resolve(_data);\n    }\n    else {\n\n      var promises = _.map(SECTIONS, function (section) {\n        var path = CONTENT_PATH + section + \".yml\";\n        return $http.get(path, {cache: true})\n          .then(function (response) {\n            var sectionConfig = response.data;\n            return {\n              key: section,\n              config: jsyaml.load(sectionConfig)\n            };\n          });\n      });\n\n      $q.all(promises).then(function (sections) {\n        _isLoaded = true;\n        _data = sections;\n        deferred.resolve(_data);\n      });\n  \n    }\n    \n    return deferred.promise;\n  };\n\n  return service;\n});","App\n  .constant('CONTENT_PATH', 'content/')\n  .constant('SECTIONS', [\n    'climate_and_energy',\n    'natural_systems',\n    'equity_and_empowerment',\n    'health_and_safety',\n    'arts_education_and_culture',\n    'economy_and_jobs',\n    'built_environment',\n  ])\n  ;","'use strict';\n\nApp\n  .controller('AppCtrl', function ($scope, $state) {\n    $scope.sectionClass = '';\n\n    $scope.$on('$stateChangeSuccess', function() {\n      $scope.sectionClass = $state.current.name;\n    });\n\n  });\n\n","'use strict';\n\nApp.controller('HomeCtrl', function ($scope, $state, sections) {\n\n  $scope.sections = sections;\n\n});\n","'use strict';\n\nApp.controller('SectionCtrl', function ($scope, $state, sections) {\n  \n  var currentSection = _.find(sections, function (s) {\n    return s.key === $state.current.name; }\n  );\n\n  $scope.section = currentSection.config;\n  $scope.subsections = currentSection.config.subsections;\n\n  //default to selecting the first subsection \n  $scope.selectedSubsection = _.first($scope.subsections);\n\n\n  $scope.selectSubsection = function (ss) {\n    $scope.selectedSubsection = ss;\n  };\n\n});\n","'use strict';\n\nApp.directive('starMainNav', function () {\n  return {\n    restrict: 'A',\n    scope: {\n      sections: '=starMainNav'\n    },\n    template: '' +\n      '<nav class=\"star-main-nav\" role=\"navigation\">' +\n        '<ul>' +\n          '<li ng-repeat=\"section in sections\" class=\"{{ section.key }}\" ng-class=\"{\\'selected\\': selectedSection == section}\">' +\n            '<h3 class=\"section-title\">' +\n              '<a href=\"\" ng-click=\"showSection(section)\">' +\n                '{{section.config.title}}' +\n              '</a>' +\n            '</h3>' +\n            '<div class=\"section-description\">' +\n              '<p>{{section.config.description}}</p>' +\n              '<p class=\"text-center\">' +\n                '<a class=\"btn btn btn-explore\" ui-sref=\"{{section.key}}\">' +\n                  'Explore' +\n                '</a>' +\n              '</p>' +\n            '</div>' +\n          '</li>' +\n        '</ul>' +\n      '</nav>',\n    link: function (scope) {\n\n      scope.selectedSection = null;\n      \n      scope.showSection = function (section) {\n        if (scope.selectedSection === section) {\n          scope.selectedSection = null;\n        }\n        else {\n          scope.selectedSection = section;\n        }\n      };\n\n      return;\n    }\n  };\n});\n","'use strict';\n// Based on btford/angular-markdown-directive\n// https://github.com/btford/angular-markdown-directive\n\n// Requires marked and ngSanitize \n\n// Specify markdown content as\n//   as scope variable: <div star-markdown=\"someScopeVar\"></div>\n//   as file: <div star-markdown ng-include=\"'myfile.md'\"></div>\n//   as html node content <div star-markdown># Title</div> \nApp.\n  directive('starMarkdown', function ($sanitize) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attrs) {\n        if (attrs.starMarkdown) {\n          scope.$watch(attrs.starMarkdown, function (newVal) {\n            var html = newVal ? $sanitize(marked(newVal)) : '';\n            element.html(html);\n          });\n        } else {\n          var html = $sanitize(marked(element.text()));\n          element.html(html);\n        }\n      }\n    };\n  });","'use strict';\n\nApp.directive('starSeptagram', function () {\n    return {\n      restrict: 'A',\n      template: '<div><img src=\"http://placehold.it/500x500\" /></div>',\n      link: function (scope, element, attrs) {\n        console.log('in septagram');\n      }\n    };\n\n});",""]}