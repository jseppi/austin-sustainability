{"version":3,"sources":["app/app.js","app/scripts/SectionService.js","app/scripts/constants.js","app/scripts/controllers/AppCtrl.js","app/scripts/controllers/HomeCtrl.js","app/scripts/controllers/SectionCtrl.js","app/scripts/directives/starMainNav.js","app/scripts/directives/starMarkdown.js","app/scripts/directives/starSeptagram.js","app/scripts/services.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA","file":"_public\\js\\app.js","sourcesContent":["'use strict';\r\n\r\n/* jshint -W079: false */\r\nvar App = angular.module('app', [\r\n  'ngAnimate', 'ngSanitize', 'ngTouch', 'ui.router'\r\n]);\r\n\r\n\r\nApp.config(function ($stateProvider, $urlRouterProvider, SECTIONS) {\r\n  $stateProvider\r\n    .state('home', {\r\n      url: '/',\r\n      templateUrl: 'partials/home.html',\r\n      controller: 'HomeCtrl',\r\n      resolve: {\r\n        sections: function (SectionService) {\r\n          return SectionService.load();\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n    //Create state for each main section based on slugs\r\n    _.each(SECTIONS, function (section) {\r\n      $stateProvider.state(section, {\r\n        url: '/' + section,\r\n        templateUrl: 'partials/section.html',\r\n        controller: 'SectionCtrl',\r\n        resolve: {\r\n          sections: function (SectionService) {\r\n            return SectionService.load();\r\n          }\r\n        }\r\n      });\r\n      return;\r\n    });\r\n    \r\n    $urlRouterProvider.otherwise('/');\r\n    return;\r\n});\r\n","'use strict';\r\n\r\nApp.factory('SectionService', function ($http, $q, CONTENT_PATH, SECTIONS) {\r\n\r\n  var service = {};\r\n  var _isLoaded = false;\r\n  var _data = [];\r\n\r\n  service.load = function () {\r\n    var deferred = $q.defer();\r\n    if (_isLoaded) {\r\n      deferred.resolve(_data);\r\n    }\r\n    else {\r\n\r\n      var promises = _.map(SECTIONS, function (section) {\r\n        var path = CONTENT_PATH + section + \".yml\";\r\n        return $http.get(path, {cache: true})\r\n          .then(function (response) {\r\n            var sectionConfig = response.data;\r\n            return {\r\n              key: section,\r\n              config: jsyaml.load(sectionConfig)\r\n            };\r\n          });\r\n      });\r\n\r\n      $q.all(promises).then(function (sections) {\r\n        _isLoaded = true;\r\n        _data = sections;\r\n        deferred.resolve(_data);\r\n      });\r\n  \r\n    }\r\n    \r\n    return deferred.promise;\r\n  };\r\n\r\n  return service;\r\n});","App\r\n  .constant('CONTENT_PATH', 'content/')\r\n  .constant('SECTIONS', [\r\n    'climate_and_energy',\r\n    'natural_systems',\r\n    'equity_and_empowerment',\r\n    'health_and_safety',\r\n    'arts_education_and_culture',\r\n    'economy_and_jobs',\r\n    'built_environment',\r\n  ])\r\n  ;","'use strict';\r\n\r\nApp\r\n  .controller('AppCtrl', function ($scope, $state) {\r\n    $scope.sectionClass = '';\r\n\r\n    $scope.$on('$stateChangeSuccess', function() {\r\n      $scope.sectionClass = $state.current.name;\r\n    });\r\n\r\n  });\r\n\r\n","'use strict';\r\n\r\nApp.controller('HomeCtrl', function ($scope, $state, sections) {\r\n\r\n  $scope.sections = sections;\r\n\r\n});\r\n","'use strict';\r\n\r\nApp.controller('SectionCtrl', function ($scope, $state, sections) {\r\n  \r\n  var currentSection = _.find(sections, function (s) {\r\n    return s.key === $state.current.name; }\r\n  );\r\n\r\n  $scope.section = currentSection.config;\r\n  $scope.subsections = currentSection.config.subsections;\r\n\r\n  //default to selecting the first subsection \r\n  $scope.selectedSubsection = _.first($scope.subsections);\r\n\r\n\r\n  $scope.selectSubsection = function (ss) {\r\n    $scope.selectedSubsection = ss;\r\n  };\r\n\r\n});\r\n","'use strict';\r\n\r\nApp.directive('starMainNav', function () {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      sections: '=starMainNav'\r\n    },\r\n    template: '' +\r\n      '<nav class=\"star-main-nav\" role=\"navigation\">' +\r\n        '<ul>' +\r\n          '<li ng-repeat=\"section in sections\" class=\"{{ section.key }}\" ng-class=\"{\\'selected\\': selectedSection == section}\">' +\r\n            '<h3 class=\"section-title\">' +\r\n              '<a href=\"\" ng-click=\"showSection(section)\">' +\r\n                '{{section.config.title}}' +\r\n              '</a>' +\r\n            '</h3>' +\r\n            '<div class=\"section-description\">' +\r\n              '<p>{{section.config.description}}</p>' +\r\n              '<p class=\"text-center\">' +\r\n                '<a class=\"btn btn btn-explore\" ui-sref=\"{{section.key}}\">' +\r\n                  'Explore' +\r\n                '</a>' +\r\n              '</p>' +\r\n            '</div>' +\r\n          '</li>' +\r\n        '</ul>' +\r\n      '</nav>',\r\n    link: function (scope) {\r\n\r\n      scope.selectedSection = null;\r\n      \r\n      scope.showSection = function (section) {\r\n        if (scope.selectedSection === section) {\r\n          scope.selectedSection = null;\r\n        }\r\n        else {\r\n          scope.selectedSection = section;\r\n        }\r\n      };\r\n\r\n      return;\r\n    }\r\n  };\r\n});\r\n","'use strict';\r\n// Based on btford/angular-markdown-directive\r\n// https://github.com/btford/angular-markdown-directive\r\n\r\n// Requires marked and ngSanitize \r\n\r\n// Specify markdown content as\r\n//   as scope variable: <div star-markdown=\"someScopeVar\"></div>\r\n//   as file: <div star-markdown ng-include=\"'myfile.md'\"></div>\r\n//   as html node content <div star-markdown># Title</div> \r\nApp.\r\n  directive('starMarkdown', function ($sanitize) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attrs) {\r\n        if (attrs.starMarkdown) {\r\n          scope.$watch(attrs.starMarkdown, function (newVal) {\r\n            var html = newVal ? $sanitize(marked(newVal)) : '';\r\n            element.html(html);\r\n          });\r\n        } else {\r\n          var html = $sanitize(marked(element.text()));\r\n          element.html(html);\r\n        }\r\n      }\r\n    };\r\n  });","'use strict';\r\n\r\nApp.directive('starSeptagram', function () {\r\n    return {\r\n      restrict: 'A',\r\n      template: '<div><img src=\"http://placehold.it/500x500\" /></div>',\r\n      link: function (scope, element, attrs) {\r\n        console.log('in septagram');\r\n      }\r\n    };\r\n\r\n});",""]}